<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 600" width="1000" height="600">
    <defs>
        <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
            <polygon points="0 0, 10 3.5, 0 7" fill="#333"/>
        </marker>
        <style>
            .node rect {
                fill: #fff;
                stroke: #333;
                stroke-width: 2px;
                rx: 8;
                ry: 8;
            }
            .node text {
                font-family: Arial, sans-serif;
                font-size: 14px;
                pointer-events: none;
            }
            .link {
                fill: none;
                stroke: #333;
                stroke-width: 2px;
                marker-end: url(#arrowhead);
            }
            .root rect {
                fill: #e6f7ff;
                stroke: #1890ff;
            }
            .main rect {
                fill: #f6ffed;
                stroke: #52c41a;
            }
            .sub rect {
                fill: #fff7e6;
                stroke: #fa8c16;
            }
        </style>
    </defs>
    <g transform="translate(500, 300)">
        <!-- 根节点 -->
        <g class="node root">
            <rect x="-100" y="-30" width="200" height="60" />
            <text x="0" y="5" text-anchor="middle" font-size="16" font-weight="bold">MMapAux核心功能</text>
        </g>
        
        <!-- 主分支1: 内存映射管理 -->
        <g class="node main" transform="translate(-350, -150)">
            <rect x="-100" y="-30" width="200<rect x="-100" y="-30" width="200" height="60" />
            <text x="0" y="5" text-anchor="middle" font-size="15" font-weight="bold">内存映射管理</text>
        </g>
        <path class="link" d="M-100,-30 L-250,-150" />
        
        <!-- 子分支1.1: 映射创建 -->
        <g class="node sub" transform="translate(-500, -250)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">映射创建：TryMap_()方法实现文件到内存的映射</text>
        </g>
        <path class="link" d="M-450,-180 L-500,-225" />
        
        <!-- 子分支1.2: 映射释放 -->
        <g class="node sub" transform="translate(-350, -320)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">映射释放：Unmap_()方法释放已映射的内存</text>
        </g>
        <path class="link" d="M-350,-180 L-350,-295" />
        
        <!-- 子分支1.3: 数据同步 -->
        <g class="node sub" transform="translate(-200, -250)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">数据同步：Sync_()方法将内存数据同步到磁盘</text>
        </g>
        <path class="link" d="M-250,-180 L-200,-225" />
        
        <!-- 主分支2: 数据操作功能 -->
        <g class="node main" transform="translate(0, -200)">
            <rect x="-100" y="-30" width="200" height="60" />
            <text x="0" y="5" text-anchor="middle" font-size="15" font-weight="bold">数据操作功能</text>
        </g>
        <path class="link" d="M0,-30 L0,-170" />
        
        <!-- 子分支2.1: 数据写入 -->
        <g class="node sub" transform="translate(-200, -320)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">数据写入：Push()方法向映射区域添加数据</text>
        </g>
        <path class="link" d="M-100,-230 L-200,-295" />
        
        <!-- 子分支2.2: 数据读取 -->
        <g class="node sub" transform="translate(0, -350)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">数据读取：Data()方法获取数据存储起始地址</text>
        </g>
        <path class="link" d="M0,-230 L0,-325" />
        
        <!-- 子分支2.3: 数据清空 -->
        <g class="node sub" transform="translate(200, -320)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">数据清空：Clear()方法重置数据大小</text>
        </g>
        <path class="link" d="M100,-230 L200,-295" />
        
        <!-- 子分支2.4: 大小调整 -->
        <g class="node sub" transform="translate(0, -420)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">大小调整：Resize()方法修改当前数据大小</text>
        </g>
        <path class="link" d="M0,-375 L0,-400" />
        
        <!-- 主分支3: 容量管理 -->
        <g class="node main" transform="translate(350, -150)">
            <rect x="-100" y="-30" width="200" height="60" />
            <text x="0" y="5" text-anchor="middle" font-size="15" font-weight="bold">容量管理</text>
        </g>
        <path class="link" d="M100,-30 L250,-150" />
        
        <!-- 子分支3.1: 容量预留 -->
        <g class="node sub" transform="translate(200, -250)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">容量预留：Reserve_()方法预分配映射空间</text>
        </g>
        <path class="link" d="M300,-180 L200,-225" />
        
        <!-- 子分支3.2: 容量扩展 -->
        <g class="node sub" transform="translate(350, -320)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">容量扩展：EnsureCapacity_()方法自动扩展容量</text>
        </g>
        <path class="link" d="M350,-180 L350,-295" />
        
        <!-- 子分支3.3: 容量查询 -->
        <g class="node sub" transform="translate(500, -250)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">容量查询：Capacity_()方法获取当前映射容量</text>
        </g>
        <path class="link" d="M400,-180 L500,-225" />
        
        <!-- 主分支4: 状态查询 -->
        <g class="node main" transform="translate(0, 150)">
            <rect x="-100" y="-30" width="200" height="60" />
            <text x="0" y="5" text-anchor="middle" font-size="15" font-weight="bold">状态查询</text>
        </g>
        <path class="link" d="M0,30 L0,120" />
        
        <!-- 子分支4.1: 数据大小 -->
        <g class="node sub" transform="translate(-200, 270)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">数据大小：Size()方法获取当前数据大小</text>
        </g>
        <path class="link" d="M-100,180 L-200,245" />
        
        <!-- 子分支4.2: 有效性检查 -->
        <g class="node sub" transform="translate(0, 340)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">有效性检查：IsValid_()方法验证数据有效性</text>
        </g>
        <path class="link" d="M0,180 L0,315" />
        
        <!-- 子分支4.3: 使用比率 -->
        <g class="node sub" transform="translate(200, 270)">
            <rect x="-100" y="-25" width="200" height="50" />
            <text x="0" y="5" text-anchor="middle">使用比率：GetRatio()方法获取空间使用比率</text>
        </g>
        <path class="link" d="M100,180 L200,245" />
    </g>
</svg>
    